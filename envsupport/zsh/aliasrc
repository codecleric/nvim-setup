#!/usr/bin/env zsh
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
alias rmorig="find . -name '*.orig' -delete"
alias rmrej="find . -name '*.rej' -delete"
alias rmpyc="find . -name '*.py[co]' -delete"
alias rmgrep="find . -name '*.grep' -delete"
alias rmtodo="find . -name '*.todo' -delete"

alias py25="python2.5"
alias py26="python2.6"
alias py27="python2.7"
alias py="python3"
alias ipy="ipython"

sys="`uname`"
echo "System is $sys"
case "$sys" in
    Darwin)
        alias ls="ls -FG"
        ;;
    Linux)
        alias ls="ls -F --color=auto"
        ;;
esac

alias la="ls -a"
alias ll="ls -l"
alias lal="ll -a"

# Docker aliases
alias dg="docker images | grep "
alias godefault='eval $(docker-machine env default)'
alias golocal='eval $(docker-machine env isig)'
alias gosr01='eval $(docker-machine env srdocker01)'
alias srd="docker images | grep scriberule"

dkr-cleanup() {
  local containers=($(docker ps -q -f 'status=exited'))
  if [[ -n "$containers" ]]; then
    echo "dkr-cleanup:: removing exited containers:"
    docker rm $containers
  else
    echo "dkr-cleanup:: zero exited containers"
  fi

  local images=($(docker images -qf 'dangling=true'))
  if [[ -n "$images" ]]; then
    echo "dkr-cleanup:: removing dangling images:"
    docker rmi $images
  else
    echo "dkr-cleanup:: zero dangling images"
  fi

  local volumes=($(docker volume ls -qf 'dangling=true'))
  if [[ -n "$volumes" ]]; then
    echo "dkr-cleanup:: removing dangling volumes:"
    docker volume rm $volumes
  else
    echo "dkr-cleanup:: zero dangling volumes"
  fi
  return 0
}

alias bri_dkr_images_dangling="docker images -qf 'dangling=true'"
alias bri_dkr_rmi_dangling="docker rmi \$(bri_dkr_images_dangling)"
      
alias bri_dkr_ps_exited="docker ps -q -f status=exited"
alias bri_dkr_rm_exited="docker rm \$(bri_dkr_ps_exited)"
      
alias bri_dkr_volumes_dangling="docker volume ls -q-f 'dangling=true'"
alias bri_dkr_rmvol_dangling="docker volume rm \$(bri_dkr_volumes_dangling)"
      
bri_dkr_cleanup() { return dkr-cleanup }

alias aws_ecr_docker_login="eval \$(aws ecr get-login --profile scriberule-ecs-access)"

