#!/usr/bin/env zsh
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
alias rmorig="find . -name '*.orig' -delete"
alias rmrej="find . -name '*.rej' -delete"
alias rmpyc="find . -name '*.py[co]' -delete"
alias rmgrep="find . -name '*.grep' -delete"
alias rmtodo="find . -name '*.todo' -delete"

alias py25="python2.5"
alias py26="python2.6"
alias py27="python2.7"
alias py="python3"
alias ipy="ipython"

sys="`uname`"
echo "System is $sys"
case "$sys" in
    Darwin)
        alias ls="ls -FGh"
        ;;
    Linux)
        alias ls="ls -Fh --color=auto"
        ;;
esac

alias la="ls -a"
alias ll="ls -l"
alias lal="ll -a"

# Docker aliases for command line helpers
function dps() {
  local basecmd="docker ps --format \"\n{{.Names}} \n\timage: {{.Image}}\n\tports: {{.Ports}}\n=============================================\" "
  if [ -n "$1" ]
  then
    eval ${basecmd}--filter name=${1}
  else
    eval ${basecmd}
  fi
}
function dsl{} {
  docker service ls | grep -v NAME | awk '{printf "%-50s%s\n", $2,$4}' | sort
}
alias dg="docker images | grep "
alias comp="docker-compose"
alias stack="docker stack"
alias std="docker stack deploy -c docker-compose.yml "
alias stu="docker stack update -c docker-compose.yml "

# Docker aliases for connecting to nodes via ssh
alias godefault='eval $(docker-machine env default)'
alias golocal='dkr-env-reset'
alias gosr01old='eval $(docker-machine env srdocker01)'
alias gosr01='pkill -9 -x -f "ssh -f -N -4 srdocker01.tunnel";ssh -f -N -4 srdocker01.tunnel;export DOCKER_HOST=tcp://localhost:12400; export docker_short=srdocker01'
alias srd="docker images | grep scriberule"
alias gosrinfra-nodec="pkill -9 -x -f \"ssh -f -N -4 srinfra-nodec.tunnel\";ssh -f -N -4 srinfra-nodec.tunnel;export DOCKER_HOST=tcp://localhost:12380; export docker_short=srinfra-nodec"
alias godock02="pkill -9 -x -f \"ssh -f -N -4 dock02-tunnel\";ssh -f -N -4 dock02-tunnel;export DOCKER_HOST=tcp://localhost:12302; export docker_short=dock02"
alias godock03="pkill -9 -x -f \"ssh -f -N -4 dock03-tunnel\";ssh -f -N -4 dock03-tunnel;export DOCKER_HOST=tcp://localhost:12303; export docker_short=dock03"
alias godock04="pkill -9 -x -f \"ssh -f -N -4 dock04-tunnel\";ssh -f -N -4 dock04-tunnel;export DOCKER_HOST=tcp://localhost:12304; export docker_short=dock04"
alias gotemplate="pkill -9 -x -f \"ssh -f -N -4 template-tunnel\";ssh -f -N -4 template-tunnel;export DOCKER_HOST=tcp://localhost:12399; export docker_short=template"


dkr-env-reset() { 
    export DOCKER_TLS_VERIFY="" 
    export DOCKER_HOST="" 
    export DOCKER_CERT_PATH="" 
    export DOCKER_MACHINE_NAME="" 
    export docker_short="local"
}
dkr-cleanup() {
  local containers=($(docker ps -q -f 'status=exited'))
  if [[ -n "$containers" ]]; then
    echo "dkr-cleanup:: removing exited containers:"
    docker rm $containers
  else
    echo "dkr-cleanup:: zero exited containers"
  fi

  local images=($(docker images -qf 'dangling=true'))
  if [[ -n "$images" ]]; then
    echo "dkr-cleanup:: removing dangling images:"
    docker rmi $images
  else
    echo "dkr-cleanup:: zero dangling images"
  fi

  local volumes=($(docker volume ls -qf 'dangling=true'))
  if [[ -n "$volumes" ]]; then
    echo "dkr-cleanup:: removing dangling volumes:"
    docker volume rm $volumes
  else
    echo "dkr-cleanup:: zero dangling volumes"
  fi
  return 0
}

alias bri_dkr_images_dangling="docker images -qf 'dangling=true'"
alias bri_dkr_rmi_dangling="docker rmi \$(bri_dkr_images_dangling)"
      
alias bri_dkr_ps_exited="docker ps -q -f status=exited"
alias bri_dkr_rm_exited="docker rm \$(bri_dkr_ps_exited)"
      
alias bri_dkr_volumes_dangling="docker volume ls -q-f 'dangling=true'"
alias bri_dkr_rmvol_dangling="docker volume rm \$(bri_dkr_volumes_dangling)"
      
bri_dkr_cleanup() { return dkr-cleanup }

alias aws_ecr_docker_login="eval \$(aws ecr get-login --profile scriberule-ecs-access)"

# zshmarks aliases
sm() {
    awk '{split($0,a,"|");$1=a[1]; $2=a[2]; printf "%-20s%s\n",$2,$1}' ~/.bookmarks | sort
}
alias bm="bookmark"
alias dm="deletemark"
alias j="jump"

# pbcopy/paste
alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"

# Git additions
alias gpullall='for E in $(echo `pwd`/*); do cd $E ; echo $E ; git pull ; echo ; done ; cd ..'
