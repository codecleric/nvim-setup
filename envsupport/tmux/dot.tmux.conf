## set up vi keybindings in copy mode
#set-window-option -g mode-keys vi

## make the escape key the copy mode starter instead of [
#unbind [
#bind Escape copy-mode

## make 'v' select your copy region
#bind-key -t vi-copy 'v' begin-selection

## make 'y' copy the text into the region
#bind-key -t vi-copy 'y' copy-selection

## make the p prefix (ctrl-b,p) paste into current tmux window
#unbind p
#bind p paste-buffer


## interact with the system clipboard (linux version)
#bind y run-shell "tmux show-buffer | xclip -selection clipboard  \; display-message "Copied tmux buffer to system clipboard"
####
# Add C-w prefix in addition to C-b -- matches VIM's window semantics; bad idea?
### Shane's from here down

####
# Set Shell
set -g default-command /usr/bin/zsh
set -g default-shell /usr/bin/zsh

####
# Behaviour of Tmux to be VIM like
set -g mouse on
set -g set-clipboard on
setw -g mode-keys vi
set -g status-keys vi

set -q -g status-utf8 on
setw -q -g utf8 on

set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
set -g monitor-activity on
set -g visual-activity off

set -g set-titles on          # set terminal title
set -g renumber-windows on    # renumber windows when a window is closed
setw -g automatic-rename on   # rename window to reflect current program

# Start with 1-based indexing
set -g base-index 1
set -g pane-base-index 1


####
# Reloading tmux.conf
bind C-r source-file ~/.tmux.conf \; display "Sourced ~/.tmux.conf"  
bind r refresh-client


####
# Panes

bind s split-window -h -c '#{pane_current_path}'
bind C-s split-window -h -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'
bind C-\\ split-window -h -c '#{pane_current_path}'

bind S split-window -h -b -c '#{pane_current_path}'
bind C-S split-window -h -b -c '#{pane_current_path}'
bind | split-window -h -b -c '#{pane_current_path}'
#bind C-| split-window -h -b -c '#{pane_current_path}'

bind v split-window -v -c '#{pane_current_path}'
bind C-v split-window -v -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind C-- split-window -v -c '#{pane_current_path}'

bind V split-window -v -b -c '#{pane_current_path}'
bind C-V split-window -v -b -c '#{pane_current_path}'
bind _ split-window -v -b -c '#{pane_current_path}'
bind C-_ split-window -v -b -c '#{pane_current_path}'

# Pane - Left direction
bind -r h select-pane -L
bind -r C-h select-pane -L

# Pane - Down direction
bind -r j select-pane -D
bind -r C-j select-pane -D

# Pane - Up direction
bind -r k select-pane -U
bind -r C-k select-pane -U

bind -r l select-pane -R
bind -r C-l select-pane -R


####
# Copy / Paste

bind-key [ copy-mode
bind-key ] paste-buffer

unbind -T copy-mode-vi Enter # Update `Enter` to also use copy-pipe-and-cancel

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -i -selection clipboard"

